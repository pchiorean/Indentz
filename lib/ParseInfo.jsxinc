// var infoFile, infoFilename = "data.txt";
// if (!(infoFile = FindFile(infoFilename))) { alert("File '" + infoFilename + "' not found."); exit() };

// var data = ParseInfo(infoFile);
// if (data.errors.length > 0) { Report(data.errors, decodeURI(infoFile.getRelativeURI(doc.filePath))); exit() };
// if (data.records.length == 0) exit();

/**
 * Parses a TSV file, returning an object containing found records and errors. Ignores blank lines and those prefixed
 * with '#'; '@path/to/file.txt' includes records from 'file.txt', '@default' includes the default info file.
 * @param {File} infoFile - Tab-separated-values file object
 * @returns {{records: Array, errors: Array}}
 */
function ParseInfo(infoFile) {
	var buffer = [], records = [], errors = [], infoLine, header, flgHeader = false, line = 0;
	infoFile.open("r");
	while (!infoFile.eof) {
		infoLine = infoFile.readln(); line++;
		if (infoLine.replace(/^\s+|\s+$/g, "") == "") continue; // Ignore blank lines
		if (infoLine.slice(0,1) == "\u0023") continue; // Ignore lines prefixed with '#'
		infoLine = infoLine.split(/ *\t */);
		if (!flgHeader) { header = infoLine; flgHeader = true; continue }; // Header
		if (infoLine[0].slice(0,1) == "\u0040") { // '@include'
			var include = infoLine[0].slice(1).replace(/^\s+|\s+$/g, "").replace(/^['"]+|['"]+$/g, "");
			var includeFile = include.toLowerCase() == "default" ?
				FindFile(infoFilename, true) : // '@default': include default info file
				File(include); // '@path/to/file.txt': include 'file.txt'
			if (includeFile.path == infoFile.path) continue; // Skip self
			if (includeFile.exists) {
				buffer = ParseInfo(includeFile);
				records = records.concat(buffer.records);
			};
		} else {
			// Some data validation and defaults here
			// if (!infoLine[x]) errors.push("Some error");
			if (errors.length == 0) records.push(infoLine);
		};
	};
	infoFile.close(); infoLine = "";
	return { records: records, errors: errors };
};
