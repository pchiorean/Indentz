/**
 * Returns the first occurrence of `filename`, first searching for a local one (in the current folder
 * or the parent folder of the active document), then a default one (on the desktop or next to the running
 * script). It also matches files starting with `_`.
 * @param {string} filename - The file name.
 * @param {boolean} [skipLocal=false] - If `true`, don't search for a local file.
 * @returns {File|void} - File object if found, or `undefined`
 */
function getDataFile(filename, skipLocal) {
	var file = '';
	var script = (function () { try { return app.activeScript; } catch (e) { return new File(e.fileName); } }());
	if (!skipLocal) {
		if (doc.saved && (file = File(app.activeDocument.filePath + '/_'    + filename)) && file.exists) return file;
		if (doc.saved && (file = File(app.activeDocument.filePath + '/'     + filename)) && file.exists) return file;
		if (doc.saved && (file = File(app.activeDocument.filePath + '/../_' + filename)) && file.exists) return file;
		if (doc.saved && (file = File(app.activeDocument.filePath + '/../'  + filename)) && file.exists) return file;
	}
	if ((file = File(Folder.desktop + '/'    + filename)) && file.exists) return file;
	if ((file = File(script.path    + '/'    + filename)) && file.exists) return file;
	if ((file = File(script.path    + '/../' + filename)) && file.exists) return file;
	return undefined;
}
