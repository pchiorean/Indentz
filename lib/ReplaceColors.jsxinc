/* eslint-disable no-unused-vars */

/**
 * Replaces a swatch or a list of swatches with a different one.
 * The new swatch is created only if values are provided (CMYK).
 * @param {(String|String[])} oldNames - Swatch name, or a list of swatch names to be replaced
 * @param {String} newName - New swatch name
 * @param {Number[]} [newValues] - Array of 4 values in 0-100 range
 */
function replaceColors(oldNames, newName, newValues) {
	// Add new color only if newValues provided
	if (newValues) {
		if (!doc.colors.itemByName(newName).isValid) {
			doc.colors.add({
				name: newName,
				colorValue: newValues,
				model: ColorModel.PROCESS,
				space: ColorSpace.CMYK
			});
		}
	}
	// Replace colors
	if (oldNames.constructor.name !== 'Array') oldNames = Array(oldNames);
	for (var i = 0, n = oldNames.length; i < n; i++)
		try { doc.colors.itemByName(oldNames[i]).remove(newName); } catch (e) {}
}
