/**
 * Matches a string against elements of an array, using wildcards and case sensitivity.
 * @param {string} searchValue - String to be matched.
 * @param {array} array - An array of strings; wildcards: '*' (zero or more characters), '?' (any character).
 * @param {boolean} [caseSensitive=false] - If `true` the search is case sensitive. (Optional.)
 * @returns {boolean} - Returns `true` for match, `false` for no match.
 * @example
 * isIn('codes', [ 'bar*code*', 'code*', 'EAN*' ]) // Matches 2nd array element
 */
function isIn(searchValue, array, caseSensitive) {
	caseSensitive = (caseSensitive === undefined) ? false : caseSensitive;
	for (var i = 0, n = array.length; i < n; i++) {
		if (RegExp('^' + array[i]
			.replace(/[|^$(.)[\]{+}\\]/g, '\\$&')       // Escape regex tokens, pass '*' and '?'
			.replace(/\*/g, '.*').replace(/\?/g, '.') + // '*' and '?' wildcards
			'$', caseSensitive ? '' : 'i'               // Case sensitivity flag
		).test(searchValue)) return true;
	}
	return false;
}
