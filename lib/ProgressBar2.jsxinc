/**
 * Creates a dual progress bar, setting it's width to accomodate a given message length.
 * @param {string} title - Palette title.
 * @param {number} maxValue - Number of steps.
 * @param {number} [maxWidth] - Maximum message length (characters); if ommitted, no message is shown (mini mode).
 * @example
 * var progress = new ProgressBar2('Progress bar demo', 100, 50);
 */
function ProgressBar2(title, maxValue, maxWidth) {
	var pb = new Window('palette', title);
	pb.bars = pb.add('group { margins: 0, orientation: "column", spacing: 1 }');
	pb.bar1 = pb.bars.add('progressbar', undefined, 0, (maxValue || 100));
	pb.bar2 = pb.bars.add('progressbar', undefined, 0, (maxValue || 100));
	pb.bar1.preferredSize.height = 12;
	pb.bar2.preferredSize.height = 3;
	if (maxWidth) { // Full progress bar
		pb.msg = pb.add('statictext { properties: { truncate: "middle" } }');
		pb.msg.characters = Math.max(maxWidth, 50);
		pb.layout.layout();
		pb.bars.size = [ pb.msg.bounds[2], 16 ];
		pb.bar1.size.width = pb.bar2.size.width = pb.bars.size.width;
	} else { // Mini progress bar
		pb.layout.layout();
		pb.bars.size = [ 420, 16 ];
		pb.bar1.size.width = pb.bar2.size.width = pb.bars.size.width;
	}
	pb.show();
	if (app.windows.length > 0) {
		pb.frameLocation = [
			(app.activeWindow.bounds[1] + app.activeWindow.bounds[3] - pb.frameSize.width)  / 2,
			(app.activeWindow.bounds[0] + app.activeWindow.bounds[2] - pb.frameSize.height) / 2
		];
	}
	/**
	 * Updates the values and the message. A counter will be appended to the title.
	 * @param {number} value1 - Primary value.
	 * @param {number} value2 - Secondary value.
	 * @param {string} [message] - Message; if ommitted, the previous message is cleared.
	 * @example
	 * progress.update(25, 50, 'Primary value is 25. Secondary value is 50.');
	 */
	this.update = function (value1, value2, maxValue2, message) {
		pb.bar1.value = value1;
		pb.bar2.value = maxValue2 > 1 ? value2 : 0;
		pb.bar2.maxvalue = maxValue2 || 0;
		pb.bar2.visible = (maxValue2 > 1);
		if (pb.msg) {
			pb.msg.visible = !!message;
			if (message) pb.msg.text = message;
		}
		pb.text = title + ' \u2013 ' + value1 + '/' + pb.bar1.maxvalue;
		pb.show(); pb.update();
	};
	/**
	 * Closes the progress bar.
	 */
	this.close = function () { pb.close(); };
}
